import os
import qrcode
import discord
from io import BytesIO
from discord.ext import commands

def register_qr(bot: commands.Bot):
    @bot.tree.command(name="qr", description="T·∫°o QR code t·ª´ n·ªôi dung ƒë∆∞·ª£c cung c·∫•p.")
    async def slash_qr(interaction: discord.Interaction, content: str):
        # Defer response ƒë·ªÉ tr√°nh timeout
        await interaction.response.defer()
        
        try:
            # Ki·ªÉm tra ƒë·ªô d√†i content
            if len(content) > 2000:
                await interaction.followup.send("‚ùå N·ªôi dung qu√° d√†i! T·ªëi ƒëa 2000 k√Ω t·ª±.", ephemeral=True)
                return
            
            if not content.strip():
                await interaction.followup.send("‚ùå Vui l√≤ng nh·∫≠p n·ªôi dung ƒë·ªÉ t·∫°o QR code!", ephemeral=True)
                return
            
            # T·∫°o QR code v·ªõi c·∫•u h√¨nh t·ªëi ∆∞u
            qr_obj = qrcode.QRCode(
                version=1,
                error_correction=qrcode.constants.ERROR_CORRECT_M,  # TƒÉng error correction
                box_size=10,
                border=2,  # TƒÉng border ƒë·ªÉ d·ªÖ scan h∆°n
            )
            
            qr_obj.add_data(content)
            qr_obj.make(fit=True)
            
            # T·∫°o ·∫£nh v·ªõi m√†u t√πy ch·ªânh
            img = qr_obj.make_image(fill_color="#d777f7", back_color="white")
            
            # L∆∞u ·∫£nh v√†o buffer
            buffer = BytesIO()
            img.save(buffer, format="PNG", optimize=True)
            buffer.seek(0)
            
            # T·∫°o file Discord
            file = discord.File(fp=buffer, filename=f"qr_{interaction.user.id}.png")
            
            # T·∫°o embed ƒë·∫πp m·∫Øt
            embed = discord.Embed(
                title="üî≥ QR Code",
                description=f"QR code cho: `{content[:100]}{'...' if len(content) > 100 else ''}`",
                color=0xd777f7
            )
            embed.set_footer(text=f"T·∫°o b·ªüi {interaction.user.display_name}")
            
            await interaction.followup.send(embed=embed, file=file)
            
        except qrcode.exceptions.DataOverflowError:
            await interaction.followup.send("‚ùå N·ªôi dung qu√° ph·ª©c t·∫°p ho·∫∑c qu√° d√†i ƒë·ªÉ t·∫°o QR code!", ephemeral=True)
        except Exception as e:
            print(f"L·ªói t·∫°o QR code: {e}")
            await interaction.followup.send("‚ùå C√≥ l·ªói x·∫£y ra khi t·∫°o QR code. Vui l√≤ng th·ª≠ l·∫°i!", ephemeral=True)
        finally:
            # ƒê·∫£m b·∫£o ƒë√≥ng buffer
            try:
                buffer.close()
            except:
                pass

# Th√™m command ƒë·ªÉ t·∫°o QR code v·ªõi URL
def register_qrurl(bot: commands.Bot):
    @bot.tree.command(name="qrurl", description="T·∫°o QR code t·ª´ URL.")
    async def slash_qr_url(interaction: discord.Interaction, url: str):
        await interaction.response.defer()
        
        try:
            # Ki·ªÉm tra URL format c∆° b·∫£n
            if not (url.startswith('http://') or url.startswith('https://')):
                url = 'https://' + url
            
            # T·∫°o QR code cho URL
            qr_obj = qrcode.QRCode(
                version=1,
                error_correction=qrcode.constants.ERROR_CORRECT_M,
                box_size=10,
                border=2,
            )
            
            qr_obj.add_data(url)
            qr_obj.make(fit=True)
            
            img = qr_obj.make_image(fill_color="#4CAF50", back_color="white")
            
            buffer = BytesIO()
            img.save(buffer, format="PNG", optimize=True)
            buffer.seek(0)
            
            file = discord.File(fp=buffer, filename=f"qr_url_{interaction.user.id}.png")
            
            embed = discord.Embed(
                title="üåê QR Code - URL",
                description=f"QR code cho: {url}",
                color=0x4CAF50
            )
            embed.set_footer(text=f"T·∫°o b·ªüi {interaction.user.display_name}")
            
            await interaction.followup.send(embed=embed, file=file)
            
        except Exception as e:
            print(f"L·ªói t·∫°o QR URL: {e}")
            await interaction.followup.send("‚ùå C√≥ l·ªói x·∫£y ra khi t·∫°o QR code URL!", ephemeral=True)
        finally:
            try:
                buffer.close()
            except:
                pass
